# azure-BasePipeline-featureX_Branch.yml file
# Pipeline to run Veracode security scans, triggered by 'featureX' branch in GitHub repo 'oseduardo/verademo'
# DEMO Financiera ION

trigger:
  branches:
    include:
    - refs/heads/featureX
  

pool:
  vmImage: 'ubuntu-latest'

stages:

  - stage: Build
    displayName: 'Build'
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/featureX'))

    jobs:

    # Builds and generates de artifacts (binaries/package) to be uploaded for Veracode scans
    - job: 'Build'
      displayName: 'Build'

      steps:

      - task: Maven@3
        inputs:
          mavenPomFile: 'app/pom.xml'
          goals: 'package' # Optional
          options: # Optional
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml' # Required when publishJUnitResults == True
          testRunTitle: # Optional
          codeCoverageToolOption: 'None' # Optional. Options: none, cobertura, jaCoCo. Enabling code coverage inserts the `clean` goal into the Maven goals list when Maven runs.
          codeCoverageClassFilter: # Optional. Comma-separated list of filters to include or exclude classes from collecting code coverage. For example: +:com.*,+:org.*,-:my.app*.*
          codeCoverageClassFilesDirectories: # Optional
          codeCoverageSourceDirectories: # Optional
          codeCoverageFailIfEmpty: false # Optional
          javaHomeOption: 'JDKVersion' # Options: jDKVersion, path
          jdkVersionOption: 'default' # Optional. Options: default, 1.11, 1.10, 1.9, 1.8, 1.7, 1.6
          jdkDirectory: # Required when javaHomeOption == Path
          jdkArchitectureOption: 'x64' # Optional. Options: x86, x64
          mavenVersionOption: 'Default' # Options: default, path
          mavenDirectory: # Required when mavenVersionOption == Path
          mavenSetM2Home: false # Required when mavenVersionOption == Path
          mavenOptions: '-Xmx1024m' # Optional
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
          sqMavenPluginVersionChoice: 'latest' # Required when sonarQubeRunAnalysis == True# Options: latest, pom
          checkStyleRunAnalysis: false # Optional
          pmdRunAnalysis: false # Optional
          findBugsRunAnalysis: false # Optional

      - task: PublishPipelineArtifact@1
        condition: succeeded()
        inputs:
          targetPath: 'app/target/verademo.war'
          artifact: verademo_package

  - stage: VeracodeSecurityScans
    displayName: 'Veracode Security Scans - FeatureX Branch'
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/featureX'))
    dependsOn: Build

    jobs:

    # Runs Veracode SAST
    - job: 'SAST_PipelineScan'
      displayName: 'Veracode SAST - Pipeline Scan'
      steps:
      - template: "./VeracodePipelineScan.yml"
        parameters:
          VID: $(VID)
          VKEY: $(VKEY)

    # Runs Veracode SCA
    - job: 'SCA_ABS'
      displayName: 'Veracode SCA - Agent-Based Scan'
      steps:
      - template: "./VeracodeSCA.yml"
        parameters:
          GITHUB_REPO_URI: $(Build.Repository.Uri)
          GITHUB_REPO_REF: $(Build.SourceBranch)
          GITHUB_REPO_NAME: 'oseduardo/verademo'
          SRCCLR_API_TOKEN: $(SRCCLR_API_TOKEN)
          SRCCLR_WORKSPACE_SLUG: 'wddUOZd'
          SRCCLR_SCAN_DIR: './app'
      
    # Runs Veracode Container/IaC
    - job: 'Container_IaC'
      displayName: 'Veracode Container/IaC Scan'
      steps:
      - template: "./VeracodeContainerSecurity.yml"
        parameters:
          VID: $(VID)
          VKEY: $(VKEY)
          GITHUB_REPO_URI: $(Build.Repository.Uri)