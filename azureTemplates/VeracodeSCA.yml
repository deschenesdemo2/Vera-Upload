# VeracodeSCA.yml file

parameters:
# Service Connection created in ADO to connect to GitHub repo
- name: 'GITHUB_SERVICE_CONNECTION'
  type: string
  default: ''
# Repo URI
- name: 'GITHUB_REPO_URI'
  type: string
  default: ''
# Ref Branch of code repo  
- name: 'GITHUB_REPO_REF'
  type: string
  default: ''
# GitHub repo name 
- name: 'GITHUB_REPO_NAME'
  type: string
  default: ''
# SRCCLR token to run Agent-based scan
- name: 'SRCCLR_API_TOKEN'
  type: string
  default: ''
# SRCCLR workspace slug
- name: 'SRCCLR_WORKSPACE_SLUG'
  type: string
  default: ''
# SRCCLR scan dir in repo
- name: 'SRCCLR_SCAN_DIR'
  type: string
  default: ''


#resources:
#  repositories:
#  - repository: verademo
#    type: github
#    endpoint: ${{ parameters.GITHUB_SERVICE_CONNECTION }}
#    name: ${{ parameters.GITHUB_REPO_NAME }}

steps:

  - task: CmdLine@2
    displayName: 'SCA - Agent-Based Scan'
    inputs:
      script: |
        export SRCCLR_SCM_NAME='${{ parameters.GITHUB_REPO_NAME }}'
        export SRCCLR_SCM_URI='${{ parameters.GITHUB_REPO_URI }}'
        export SRCCLR_SCM_REF='${{ parameters.GITHUB_REPO_REF }}'
        export SRCCLR_SCM_REF_TYPE=branch
        export SRCCLR_API_TOKEN='${{ parameters.SRCCLR_API_TOKEN }}'
        export SRCCLR_WORKSPACE_SLUG='${{ parameters.SRCCLR_WORKSPACE_SLUG }}'
        export SCAN_DIR='${{ parameters.SRCCLR_SCAN_DIR }}'
        curl -sSL https://download.sourceclear.com/ci.sh | DEBUG=1 sh -s -- scan --skip-compile --update-advisor --allow-dirty
#        STATUS_SCA=${?}
#        if [ $STATUS_SCA -eq 0 ];
#        then
#          echo '[INFO] --- SCA has finished.'
#          echo '[INFO] --- No violations were found considering set rules.'
#        elif  [ $STATUS_SCA -gt 0 ];
#        then
#          echo '[INFO] --- SCA has finished.'
#          echo '[INFO] --- ' $STATUS_SCA ' violations were found considering set rules.'
#          exit 1
#        fi

  - script: ls -all